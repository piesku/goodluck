import {Mesh} from "../common/material.js";
import {GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_STATIC_DRAW} from "../common/webgl.js";

export function mesh_icosphere_smooth(gl: WebGLRenderingContext): Mesh {
    let vertex_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, vertex_buf);
    gl.bufferData(GL_ARRAY_BUFFER, vertex_arr, GL_STATIC_DRAW);

    let normal_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, normal_buf);
    gl.bufferData(GL_ARRAY_BUFFER, normal_arr, GL_STATIC_DRAW);

    let texcoord_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, texcoord_buf);
    gl.bufferData(GL_ARRAY_BUFFER, texcoord_arr, GL_STATIC_DRAW);

    let index_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER, index_buf);
    gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, index_arr, GL_STATIC_DRAW);

    return {
        VertexBuffer: vertex_buf,
        VertexArray: vertex_arr,
        NormalBuffer: normal_buf,
        TexCoordBuffer: texcoord_buf,
        IndexBuffer: index_buf,
        IndexArray: index_arr,
        IndexCount: index_arr.length,
    };
}

// prettier-ignore
let vertex_arr = Float32Array.from([
    0, -0.5, 0,
    0.223605, -0.425327, 0.154506,
    -0.085408, -0.425327, 0.249998,
    0.380422, -0.22361, 0.262863,
    0.447211, -0.262868, 0,
    -0.276392, -0.425326, 0,
    -0.085408, -0.425327, -0.249998,
    0.223605, -0.425327, -0.154506,
    0.5, 0, 0.154506,
    -0.145306, -0.22361, 0.425325,
    0.138198, -0.262869, 0.404506,
    0, 0, 0.5,
    -0.470227, -0.223608, 0,
    -0.361802, -0.262868, 0.249998,
    -0.5, 0, 0.154506,
    -0.145306, -0.22361, -0.425325,
    -0.361802, -0.262868, -0.249998,
    -0.309017, 0, -0.404508,
    0.380422, -0.22361, -0.262863,
    0.138198, -0.262869, -0.404506,
    0.309017, 0, -0.404508,
    0.309017, 0, 0.404508,
    -0.309017, 0, 0.404508,
    -0.5, 0, -0.154506,
    0, 0, -0.5,
    0.5, 0, -0.154506,
    0.145306, 0.22361, 0.425325,
    0.361802, 0.262868, 0.249998,
    0.085408, 0.425327, 0.249998,
    -0.380422, 0.22361, 0.262863,
    -0.138198, 0.262869, 0.404506,
    -0.223605, 0.425327, 0.154506,
    -0.380422, 0.22361, -0.262863,
    -0.447211, 0.262868, 0,
    -0.223605, 0.425327, -0.154506,
    0.145306, 0.22361, -0.425325,
    -0.138198, 0.262869, -0.404506,
    0.085408, 0.425327, -0.249998,
    0.470227, 0.223608, 0,
    0.361802, 0.262868, -0.249998,
    0.276392, 0.425326, 0,
    0, 0.5, 0
]);

// prettier-ignore
let normal_arr = Float32Array.from([
    0, -1, 0,
    0.4115, -0.8568, 0.3107,
    -0.1564, -0.8515, 0.5004,
    0.7095, -0.4566, 0.5367,
    0.8415, -0.5402, 0,
    -0.5101, -0.8601, 0,
    -0.1564, -0.8515, -0.5004,
    0.4115, -0.8568, -0.3107,
    0.9474, -0.0004, 0.3199,
    -0.2662, -0.4485, 0.8532,
    0.2529, -0.5271, 0.8113,
    0, 0, 1,
    -0.887, -0.4617, 0,
    -0.6736, -0.5351, 0.5098,
    -0.9474, 0.0004, 0.3199,
    -0.2662, -0.4485, -0.8532,
    -0.6736, -0.5351, -0.5098,
    -0.5727, -0.0005, -0.8197,
    0.7095, -0.4566, -0.5367,
    0.2529, -0.5271, -0.8113,
    0.5727, 0.0005, -0.8197,
    0.5727, 0.0005, 0.8197,
    -0.5727, -0.0005, 0.8197,
    -0.9474, 0.0004, -0.3199,
    0, 0, -1,
    0.9474, -0.0004, -0.3199,
    0.2662, 0.4485, 0.8532,
    0.6736, 0.5351, 0.5098,
    0.1564, 0.8515, 0.5004,
    -0.7095, 0.4566, 0.5367,
    -0.2529, 0.5271, 0.8113,
    -0.4115, 0.8568, 0.3107,
    -0.7095, 0.4566, -0.5367,
    -0.8415, 0.5402, 0,
    -0.4115, 0.8568, -0.3107,
    0.2662, 0.4485, -0.8532,
    -0.2529, 0.5271, -0.8113,
    0.1564, 0.8515, -0.5004,
    0.887, 0.4617, 0,
    0.6736, 0.5351, -0.5098,
    0.5101, 0.8601, 0,
    0, 1, 0
]);

// prettier-ignore
let texcoord_arr = Float32Array.from([]);

// prettier-ignore
let index_arr = Uint16Array.from([
    38, 39, 25,
    40, 39, 38,
    40, 38, 27,
    38, 25, 8,
    27, 38, 8,
    27, 8, 21,
    21, 8, 3,
    25, 4, 8,
    8, 4, 3,
    4, 1, 3,
    25, 18, 4,
    7, 1, 4,
    18, 7, 4,
    23, 14, 12,
    23, 12, 16,
    15, 16, 6,
    19, 15, 6,
    19, 6, 7,
    18, 19, 7,
    39, 20, 25,
    25, 20, 18,
    20, 19, 18,
    39, 35, 20,
    24, 15, 19,
    24, 19, 20,
    35, 24, 20,
    23, 16, 17,
    24, 17, 15,
    17, 16, 15,
    32, 23, 17,
    36, 32, 17,
    36, 17, 24,
    35, 36, 24,
    37, 35, 39,
    37, 39, 40,
    37, 36, 35,
    41, 37, 40,
    34, 32, 36,
    34, 36, 37,
    41, 34, 37,
    33, 14, 23,
    32, 33, 23,
    34, 33, 32,
    33, 29, 14,
    31, 29, 33,
    31, 33, 34,
    41, 31, 34,
    40, 27, 28,
    41, 40, 28,
    41, 28, 31,
    26, 27, 21,
    28, 27, 26,
    28, 26, 30,
    28, 30, 31,
    31, 30, 29,
    29, 22, 14,
    29, 30, 22,
    26, 21, 11,
    30, 26, 11,
    30, 11, 22,
    10, 3, 1,
    21, 3, 10,
    21, 10, 11,
    22, 11, 9,
    11, 10, 9,
    22, 9, 13,
    22, 13, 14,
    14, 13, 12,
    12, 13, 5,
    16, 12, 5,
    16, 5, 6,
    10, 1, 2,
    9, 10, 2,
    13, 9, 2,
    13, 2, 5,
    7, 0, 1,
    7, 6, 0,
    6, 5, 0,
    5, 2, 0,
    2, 1, 0
]);
