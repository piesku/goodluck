import {Mesh} from "../common/material.js";
import {GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_STATIC_DRAW} from "../common/webgl.js";

export function mesh_navmesh(gl: WebGLRenderingContext): Mesh {
    let vertex_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, vertex_buf);
    gl.bufferData(GL_ARRAY_BUFFER, vertex_arr, GL_STATIC_DRAW);

    let normal_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, normal_buf);
    gl.bufferData(GL_ARRAY_BUFFER, normal_arr, GL_STATIC_DRAW);

    let texcoord_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, texcoord_buf);
    gl.bufferData(GL_ARRAY_BUFFER, texcoord_arr, GL_STATIC_DRAW);

    let index_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER, index_buf);
    gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, index_arr, GL_STATIC_DRAW);

    return {
        VertexBuffer: vertex_buf,
        VertexArray: vertex_arr,
        NormalBuffer: normal_buf,
        TexCoordBuffer: texcoord_buf,
        IndexBuffer: index_buf,
        IndexArray: index_arr,
        IndexCount: index_arr.length,
    };
}

let vertex_arr = Float32Array.from([
    50,
    0,
    -40,
    40,
    0,
    -50,
    40,
    0,
    -40,
    -40,
    0,
    -40,
    -50,
    0,
    -50,
    -50,
    0,
    -40,
    -30,
    0,
    -40,
    -40,
    0,
    -50,
    -20,
    0,
    -40,
    -30,
    0,
    -50,
    -10,
    0,
    -40,
    -20,
    0,
    -50,
    0,
    0,
    -40,
    -10,
    0,
    -50,
    10,
    0,
    -40,
    0,
    0,
    -50,
    20,
    0,
    -40,
    10,
    0,
    -50,
    30,
    0,
    -40,
    20,
    0,
    -50,
    30,
    0,
    -50,
    -40,
    0,
    50,
    -50,
    0,
    40,
    -50,
    0,
    50,
    -40,
    0,
    40,
    -50,
    0,
    30,
    -40,
    0,
    30,
    -50,
    0,
    20,
    -40,
    0,
    20,
    -50,
    0,
    10,
    -40,
    0,
    10,
    -50,
    0,
    0,
    -40,
    0,
    0,
    -50,
    0,
    -10,
    -40,
    0,
    -10,
    -50,
    0,
    -20,
    -40,
    0,
    -20,
    -50,
    0,
    -30,
    -40,
    0,
    -30,
    -30,
    0,
    50,
    -30,
    0,
    40,
    -30,
    0,
    -20,
    -30,
    0,
    -30,
    -20,
    0,
    50,
    -20,
    0,
    40,
    -30,
    0,
    30,
    -20,
    0,
    -20,
    -20,
    0,
    -30,
    -10,
    0,
    50,
    -10,
    0,
    40,
    -20,
    0,
    30,
    -10,
    0,
    -20,
    -10,
    0,
    -30,
    0,
    0,
    50,
    0,
    0,
    40,
    -10,
    0,
    30,
    0,
    0,
    0,
    -10,
    0,
    -10,
    -10,
    0,
    0,
    0,
    0,
    -10,
    0,
    0,
    -20,
    0,
    0,
    -30,
    10,
    0,
    50,
    10,
    0,
    40,
    0,
    0,
    30,
    10,
    0,
    0,
    10,
    0,
    -10,
    10,
    0,
    -20,
    10,
    0,
    -30,
    20,
    0,
    50,
    20,
    0,
    40,
    10,
    0,
    30,
    20,
    0,
    0,
    20,
    0,
    -10,
    20,
    0,
    -20,
    20,
    0,
    -30,
    30,
    0,
    50,
    30,
    0,
    40,
    20,
    0,
    30,
    30,
    0,
    0,
    30,
    0,
    -10,
    30,
    0,
    -20,
    30,
    0,
    -30,
    40,
    0,
    50,
    40,
    0,
    40,
    30,
    0,
    30,
    40,
    0,
    30,
    30,
    0,
    20,
    40,
    0,
    20,
    30,
    0,
    10,
    40,
    0,
    10,
    40,
    0,
    0,
    40,
    0,
    -10,
    40,
    0,
    -20,
    40,
    0,
    -30,
    50,
    0,
    50,
    50,
    0,
    40,
    50,
    0,
    30,
    50,
    0,
    20,
    50,
    0,
    10,
    50,
    0,
    0,
    50,
    0,
    -10,
    50,
    0,
    -20,
    50,
    0,
    -30,
    50,
    0,
    -50,
]);

let normal_arr = Float32Array.from([
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
]);

let texcoord_arr = Float32Array.from([]);

let index_arr = Uint16Array.from([
    92,
    101,
    100,
    91,
    92,
    100,
    91,
    100,
    99,
    23,
    22,
    21,
    22,
    24,
    21,
    21,
    24,
    39,
    22,
    25,
    24,
    5,
    4,
    3,
    4,
    7,
    3,
    58,
    57,
    56,
    57,
    59,
    56,
    56,
    59,
    65,
    57,
    51,
    59,
    51,
    60,
    59,
    17,
    19,
    16,
    15,
    17,
    14,
    14,
    17,
    16,
    12,
    14,
    68,
    13,
    15,
    12,
    12,
    15,
    14,
    61,
    12,
    68,
    10,
    12,
    61,
    11,
    13,
    10,
    10,
    13,
    12,
    52,
    61,
    60,
    52,
    10,
    61,
    51,
    52,
    60,
    8,
    10,
    52,
    9,
    11,
    8,
    8,
    11,
    10,
    7,
    9,
    6,
    6,
    9,
    8,
    3,
    7,
    6,
    47,
    52,
    51,
    6,
    8,
    47,
    47,
    8,
    52,
    57,
    46,
    51,
    46,
    47,
    51,
    42,
    47,
    46,
    3,
    6,
    42,
    42,
    6,
    47,
    5,
    3,
    38,
    38,
    3,
    42,
    37,
    5,
    38,
    38,
    42,
    41,
    41,
    42,
    46,
    37,
    38,
    36,
    36,
    38,
    41,
    35,
    37,
    36,
    35,
    36,
    34,
    41,
    34,
    36,
    33,
    35,
    34,
    33,
    34,
    32,
    31,
    33,
    32,
    31,
    32,
    30,
    29,
    31,
    30,
    29,
    30,
    28,
    27,
    29,
    28,
    27,
    28,
    26,
    25,
    26,
    24,
    25,
    27,
    26,
    24,
    40,
    39,
    39,
    40,
    43,
    24,
    26,
    40,
    26,
    45,
    40,
    28,
    45,
    26,
    40,
    44,
    43,
    43,
    44,
    48,
    40,
    45,
    44,
    45,
    50,
    44,
    44,
    49,
    48,
    48,
    49,
    53,
    44,
    50,
    49,
    50,
    55,
    49,
    49,
    54,
    53,
    53,
    54,
    62,
    49,
    55,
    54,
    55,
    64,
    54,
    54,
    63,
    62,
    62,
    63,
    69,
    54,
    64,
    63,
    64,
    71,
    63,
    63,
    70,
    69,
    69,
    70,
    76,
    63,
    71,
    70,
    84,
    96,
    95,
    83,
    84,
    95,
    77,
    84,
    83,
    70,
    77,
    76,
    76,
    77,
    83,
    71,
    78,
    70,
    70,
    78,
    77,
    78,
    85,
    77,
    77,
    85,
    84,
    86,
    97,
    96,
    85,
    86,
    84,
    84,
    86,
    96,
    85,
    78,
    87,
    85,
    87,
    86,
    88,
    98,
    97,
    87,
    88,
    86,
    86,
    88,
    97,
    90,
    99,
    98,
    90,
    91,
    99,
    88,
    90,
    98,
    89,
    90,
    88,
    87,
    89,
    88,
    79,
    91,
    90,
    89,
    79,
    90,
    72,
    79,
    89,
    59,
    66,
    65,
    65,
    66,
    72,
    59,
    60,
    66,
    61,
    68,
    67,
    60,
    67,
    66,
    60,
    61,
    67,
    66,
    73,
    72,
    72,
    73,
    79,
    66,
    67,
    73,
    80,
    92,
    91,
    73,
    80,
    79,
    79,
    80,
    91,
    67,
    74,
    73,
    73,
    74,
    80,
    67,
    68,
    74,
    14,
    16,
    75,
    68,
    75,
    74,
    68,
    14,
    75,
    74,
    81,
    80,
    80,
    81,
    92,
    74,
    75,
    81,
    93,
    102,
    101,
    81,
    93,
    92,
    92,
    93,
    101,
    75,
    82,
    81,
    81,
    82,
    93,
    75,
    16,
    82,
    16,
    18,
    82,
    19,
    20,
    18,
    16,
    19,
    18,
    82,
    94,
    93,
    93,
    94,
    102,
    82,
    18,
    94,
    94,
    103,
    102,
    18,
    2,
    94,
    94,
    2,
    103,
    18,
    20,
    2,
    20,
    1,
    2,
    2,
    0,
    103,
    1,
    104,
    0,
    2,
    1,
    0,
]);
