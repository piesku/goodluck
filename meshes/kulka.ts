import {Mesh} from "../common/material.js";
import {GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_STATIC_DRAW} from "../common/webgl.js";

export function mesh_kulka(gl: WebGLRenderingContext): Mesh {
    let vertex_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, vertex_buf);
    gl.bufferData(GL_ARRAY_BUFFER, vertex_arr, GL_STATIC_DRAW);

    let normal_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, normal_buf);
    gl.bufferData(GL_ARRAY_BUFFER, normal_arr, GL_STATIC_DRAW);

    let texcoord_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, texcoord_buf);
    gl.bufferData(GL_ARRAY_BUFFER, texcoord_arr, GL_STATIC_DRAW);

    let index_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER, index_buf);
    gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, index_arr, GL_STATIC_DRAW);

    return {
        VertexBuffer: vertex_buf,
        VertexArray: vertex_arr,
        NormalBuffer: normal_buf,
        TexCoordBuffer: texcoord_buf,
        IndexBuffer: index_buf,
        IndexArray: index_arr,
        IndexCount: index_arr.length,
    };
}

// prettier-ignore
let vertex_arr = Float32Array.from([
    0, -0.5, 0,
    0.212661, -0.425327, 0.154506,
    -0.081228, -0.425327, 0.249998,
    0.361804, -0.22361, 0.262863,
    0.212661, -0.425327, 0.154506,
    0.425324, -0.262868, 0,
    -0.262865, -0.425326, 0,
    -0.262865, -0.425326, 0,
    -0.081228, -0.425327, -0.249998,
    0.212661, -0.425327, -0.154506,
    0.425324, -0.262868, 0,
    0.475529, 0, 0.154506,
    -0.138194, -0.22361, 0.425325,
    0.131434, -0.262869, 0.404506,
    0, 0, 0.5,
    -0.447213, -0.223608, 0,
    -0.344095, -0.262868, 0.249998,
    -0.475529, 0, 0.154506,
    -0.138194, -0.22361, -0.425325,
    -0.344095, -0.262868, -0.249998,
    -0.293893, 0, -0.404508,
    0.361804, -0.22361, -0.262863,
    0.131434, -0.262869, -0.404506,
    0.293893, 0, -0.404508,
    0.361804, -0.22361, 0.262863,
    0.475529, 0, 0.154506,
    0.293893, 0, 0.404508,
    -0.293893, 0, 0.404508,
    -0.475529, 0, 0.154506,
    -0.475529, 0, -0.154506,
    0, 0, -0.5,
    0.475529, 0, -0.154506,
    0.138194, 0.22361, 0.425325,
    0.344095, 0.262868, 0.249998,
    0.081228, 0.425327, 0.249998,
    -0.361804, 0.22361, 0.262863,
    -0.131434, 0.262869, 0.404506,
    -0.212661, 0.425327, 0.154506,
    -0.361804, 0.22361, -0.262863,
    -0.425324, 0.262868, 0,
    -0.212661, 0.425327, -0.154506,
    0.138194, 0.22361, -0.425325,
    -0.131434, 0.262869, -0.404506,
    0.081228, 0.425327, -0.249998,
    0.447213, 0.223608, 0,
    0.344095, 0.262868, -0.249998,
    0.262865, 0.425326, 0,
    0.262865, 0.425326, 0,
    0.081228, 0.425327, -0.249998,
    0, 0.5, 0,
    0.262865, 0.425326, 0,
    -0.212661, 0.425327, -0.154506,
    -0.131434, 0.262869, -0.404506,
    -0.212661, 0.425327, -0.154506,
    -0.212661, 0.425327, -0.154506,
    -0.212661, 0.425327, -0.154506,
    -0.212661, 0.425327, 0.154506,
    -0.212661, 0.425327, -0.154506,
    -0.425324, 0.262868, 0,
    -0.212661, 0.425327, 0.154506,
    -0.425324, 0.262868, 0,
    -0.212661, 0.425327, 0.154506,
    -0.212661, 0.425327, 0.154506,
    0.081228, 0.425327, 0.249998,
    -0.212661, 0.425327, 0.154506,
    -0.131434, 0.262869, 0.404506,
    0.262865, 0.425326, 0,
    0.262865, 0.425326, 0,
    0.447213, 0.223608, 0,
    0.262865, 0.425326, 0,
    0.475529, 0, -0.154506,
    0.475529, 0, -0.154506,
    0, 0, -0.5,
    -0.131434, 0.262869, -0.404506,
    -0.361804, 0.22361, -0.262863,
    -0.475529, 0, -0.154506,
    -0.425324, 0.262868, 0,
    -0.475529, 0, -0.154506,
    -0.475529, 0, 0.154506,
    -0.425324, 0.262868, 0,
    -0.475529, 0, 0.154506,
    -0.361804, 0.22361, 0.262863,
    -0.425324, 0.262868, 0,
    -0.131434, 0.262869, 0.404506,
    -0.131434, 0.262869, 0.404506,
    0, 0, 0.5,
    -0.131434, 0.262869, 0.404506,
    0.475529, 0, 0.154506,
    0.475529, 0, 0.154506,
    0.131434, -0.262869, -0.404506,
    -0.475529, 0, -0.154506,
    -0.475529, 0, -0.154506,
    -0.447213, -0.223608, 0,
    -0.475529, 0, -0.154506,
    -0.475529, 0, 0.154506,
    -0.475529, 0, 0.154506,
    0, 0, 0.5,
    0.131434, -0.262869, 0.404506,
    0.475529, 0, 0.154506,
    0.475529, 0, -0.154506,
    0.475529, 0, 0.154506,
    0.425324, -0.262868, 0,
    0.475529, 0, -0.154506,
    0.425324, -0.262868, 0,
    0.475529, 0, -0.154506,
    0.212661, -0.425327, -0.154506,
    0.131434, -0.262869, -0.404506,
    0.361804, -0.22361, -0.262863,
    0.212661, -0.425327, -0.154506,
    0.131434, -0.262869, -0.404506,
    -0.081228, -0.425327, -0.249998,
    -0.262865, -0.425326, 0,
    -0.262865, -0.425326, 0,
    -0.262865, -0.425326, 0,
    -0.262865, -0.425326, 0,
    -0.081228, -0.425327, 0.249998,
    0.425324, -0.262868, 0,
    0.212661, -0.425327, -0.154506,
    0.425324, -0.262868, 0,
    0.212661, -0.425327, 0.154506,
    0.212661, -0.425327, -0.154506,
    0.212661, -0.425327, 0.154506,
    0.212661, -0.425327, -0.154506,
    0.212661, -0.425327, 0.154506,
    0.131434, -0.262869, 0.404506,
    0.212661, -0.425327, 0.154506
]);

// prettier-ignore
let normal_arr = Float32Array.from([
    0, -1, 0,
    0.4253, -0.8506, 0.309,
    -0.1625, -0.8506, 0.5,
    0.7236, -0.4472, 0.5257,
    0.4253, -0.8506, 0.309,
    0.8506, -0.5257, 0,
    -0.5257, -0.8506, 0,
    -0.5257, -0.8506, 0,
    -0.1625, -0.8506, -0.5,
    0.4253, -0.8506, -0.309,
    0.8506, -0.5257, 0,
    0.951, 0, 0.309,
    -0.2764, -0.4472, 0.8506,
    0.2629, -0.5257, 0.809,
    0, 0, 1,
    -0.8944, -0.4472, 0,
    -0.6882, -0.5257, 0.5,
    -0.951, 0, 0.309,
    -0.2764, -0.4472, -0.8506,
    -0.6882, -0.5257, -0.5,
    -0.5878, 0, -0.809,
    0.7236, -0.4472, -0.5257,
    0.2629, -0.5257, -0.809,
    0.5878, 0, -0.809,
    0.7236, -0.4472, 0.5257,
    0.951, 0, 0.309,
    0.5878, 0, 0.809,
    -0.5878, 0, 0.809,
    -0.951, 0, 0.309,
    -0.951, 0, -0.309,
    0, 0, -1,
    0.951, 0, -0.309,
    0.2764, 0.4472, 0.8506,
    0.6882, 0.5257, 0.5,
    0.1625, 0.8506, 0.5,
    -0.7236, 0.4472, 0.5257,
    -0.2629, 0.5257, 0.809,
    -0.4253, 0.8506, 0.309,
    -0.7236, 0.4472, -0.5257,
    -0.8506, 0.5257, 0,
    -0.4253, 0.8506, -0.309,
    0.2764, 0.4472, -0.8506,
    -0.2629, 0.5257, -0.809,
    0.1625, 0.8506, -0.5,
    0.8944, 0.4472, 0,
    0.6882, 0.5257, -0.5,
    0.5257, 0.8506, 0,
    0.5257, 0.8506, 0,
    0.1625, 0.8506, -0.5,
    0, 1, 0,
    0.5257, 0.8506, 0,
    -0.4253, 0.8506, -0.309,
    -0.2629, 0.5257, -0.809,
    -0.4253, 0.8506, -0.309,
    -0.4253, 0.8506, -0.309,
    -0.4253, 0.8506, -0.309,
    -0.4253, 0.8506, 0.309,
    -0.4253, 0.8506, -0.309,
    -0.8506, 0.5257, 0,
    -0.4253, 0.8506, 0.309,
    -0.8506, 0.5257, 0,
    -0.4253, 0.8506, 0.309,
    -0.4253, 0.8506, 0.309,
    0.1625, 0.8506, 0.5,
    -0.4253, 0.8506, 0.309,
    -0.2629, 0.5257, 0.809,
    0.5257, 0.8506, 0,
    0.5257, 0.8506, 0,
    0.8944, 0.4472, 0,
    0.5257, 0.8506, 0,
    0.951, 0, -0.309,
    0.951, 0, -0.309,
    0, 0, -1,
    -0.2629, 0.5257, -0.809,
    -0.7236, 0.4472, -0.5257,
    -0.951, 0, -0.309,
    -0.8506, 0.5257, 0,
    -0.951, 0, -0.309,
    -0.951, 0, 0.309,
    -0.8506, 0.5257, 0,
    -0.951, 0, 0.309,
    -0.7236, 0.4472, 0.5257,
    -0.8506, 0.5257, 0,
    -0.2629, 0.5257, 0.809,
    -0.2629, 0.5257, 0.809,
    0, 0, 1,
    -0.2629, 0.5257, 0.809,
    0.951, 0, 0.309,
    0.951, 0, 0.309,
    0.2629, -0.5257, -0.809,
    -0.951, 0, -0.309,
    -0.951, 0, -0.309,
    -0.8944, -0.4472, 0,
    -0.951, 0, -0.309,
    -0.951, 0, 0.309,
    -0.951, 0, 0.309,
    0, 0, 1,
    0.2629, -0.5257, 0.809,
    0.951, 0, 0.309,
    0.951, 0, -0.309,
    0.951, 0, 0.309,
    0.8506, -0.5257, 0,
    0.951, 0, -0.309,
    0.8506, -0.5257, 0,
    0.951, 0, -0.309,
    0.4253, -0.8506, -0.309,
    0.2629, -0.5257, -0.809,
    0.7236, -0.4472, -0.5257,
    0.4253, -0.8506, -0.309,
    0.2629, -0.5257, -0.809,
    -0.1625, -0.8506, -0.5,
    -0.5257, -0.8506, 0,
    -0.5257, -0.8506, 0,
    -0.5257, -0.8506, 0,
    -0.5257, -0.8506, 0,
    -0.1625, -0.8506, 0.5,
    0.8506, -0.5257, 0,
    0.4253, -0.8506, -0.309,
    0.8506, -0.5257, 0,
    0.4253, -0.8506, 0.309,
    0.4253, -0.8506, -0.309,
    0.4253, -0.8506, 0.309,
    0.4253, -0.8506, -0.309,
    0.4253, -0.8506, 0.309,
    0.2629, -0.5257, 0.809,
    0.4253, -0.8506, 0.309
]);

// prettier-ignore
let texcoord_arr = Float32Array.from([
    0.248707, 0.844099,
    0.193936, 0.680686,
    0.324993, 0.713788,
    0.127333, 0.543157,
    0.193936, 0.680686,
    0.04775, 0.680684,
    0.331147, 0.911137,
    0.331147, 0.911137,
    0.203892, 1,
    0.119092, 0.857572,
    0.04775, 0.680684,
    0.017115, 0.536898,
    0.443639, 0.442899,
    0.404492, 0.536898,
    0.335396, 0.370986,
    0.661592, 0.26845,
    0.558994, 0.370988,
    0.558994, 0.16591,
    0.75145, 0.153584,
    0.881332, 0.146536,
    0.801977, 0.319609,
    0.108244, 0.4429,
    0.000001, 0.370991,
    0.095488, 0.26845,
    0.797299, 0.997247,
    0.714222, 0.863745,
    0.860317, 0.856507,
    0.430883, 0.268448,
    0.558994, 0.16591,
    0.670791, 0.10254,
    0.671855, 0.280037,
    0.223598, 0.370988,
    0.910844, 0.690482,
    0.780962, 0.683434,
    0.86204, 0.536898,
    0.662294, 0.844097,
    0.604589, 1,
    0.543201, 0.857572,
    0.534961, 0.543157,
    0.614544, 0.680684,
    0.468358, 0.680686,
    0.108243, 0.093999,
    0.069096, 0,
    0.207286, 0,
    0.326196, 0.268448,
    0.223598, 0.16591,
    0.335396, 0.102538,
    0.331147, 0.911137,
    0.337301, 0.713789,
    0.413586, 0.844099,
    0.335396, 0.102538,
    0.468358, 0.680686,
    0.408642, 0.536899,
    0.468358, 0.680686,
    0.468358, 0.680686,
    0.468358, 0.680686,
    0.543201, 0.857572,
    0.468358, 0.680686,
    0.614544, 0.680684,
    0.543201, 0.857572,
    0.614544, 0.680684,
    0.543201, 0.857572,
    0.543201, 0.857572,
    0.458402, 1,
    0.543201, 0.857572,
    0.991503, 0.619404,
    0.331147, 0.911137,
    0.715946, 0.544137,
    0.662294, 0.702798,
    0.715946, 0.544137,
    0.223598, 0.370988,
    0.223598, 0.370988,
    0, 0.165912,
    0.738596, 0.460349,
    0.864995, 0.460349,
    0.645178, 0.536898,
    0.614544, 0.680684,
    0.670791, 0.10254,
    0.558994, 0.16591,
    0.542681, 0,
    0.558994, 0.16591,
    0.443639, 0.093998,
    0.542681, 0,
    0.335396, 0.165907,
    0.335396, 0.165907,
    0.990438, 0.816935,
    0.991503, 0.619404,
    0.714222, 0.863745,
    0.714222, 0.863745,
    0.670791, 0.082506,
    0.948072, 0.326848,
    0.948072, 0.326848,
    1, 0.1659,
    0.948072, 0.326848,
    0.558994, 0.16591,
    0.558994, 0.16591,
    0.990438, 0.816935,
    0.923698, 0.997247,
    0.335396, 0.434358,
    0.223598, 0.370988,
    0.335396, 0.434358,
    0.207286, 0.536898,
    0.223598, 0.370988,
    0.207286, 0.536898,
    0.223598, 0.370988,
    0.119092, 0.857572,
    0.057705, 1,
    0, 0.844097,
    0.119092, 0.857572,
    0.057705, 1,
    0.800254, 0,
    0.946348, 0.00724,
    0.946348, 0.00724,
    0.670791, 0.434359,
    0.670791, 0.434359,
    0.542682, 0.536898,
    0.04775, 0.680684,
    0.119092, 0.857572,
    0.04775, 0.680684,
    0.193936, 0.680686,
    0.119092, 0.857572,
    0.193936, 0.680686,
    0.119092, 0.857572,
    0.193936, 0.680686,
    0.253651, 0.536899,
    0.193936, 0.680686
]);

// prettier-ignore
let index_arr = Uint16Array.from([
    120, 119, 118,
    107, 117, 116,
    107, 106, 105,
    102, 101, 100,
    79, 78, 77,
    59, 58, 57,
    38, 76, 75,
    40, 39, 38,
    54, 38, 52,
    53, 52, 48,
    49, 56, 55,
    49, 51, 48,
    49, 48, 47,
    49, 66, 63,
    49, 63, 62,
    63, 36, 64,
    61, 35, 60,
    37, 36, 35,
    86, 32, 85,
    34, 32, 65,
    33, 68, 88,
    69, 68, 33,
    67, 33, 34,
    34, 33, 32,
    26, 97, 96,
    32, 26, 96,
    33, 87, 26,
    32, 33, 26,
    26, 24, 97,
    26, 25, 24,
    44, 99, 98,
    44, 45, 70,
    43, 45, 50,
    46, 45, 44,
    43, 41, 45,
    43, 42, 41,
    41, 42, 72,
    41, 72, 23,
    45, 41, 23,
    45, 23, 71,
    72, 22, 23,
    104, 21, 103,
    31, 23, 21,
    23, 22, 21,
    19, 92, 112,
    19, 111, 110,
    93, 92, 19,
    91, 19, 20,
    74, 90, 20,
    73, 74, 20,
    73, 20, 30,
    18, 19, 110,
    89, 18, 110,
    30, 18, 89,
    30, 20, 18,
    20, 19, 18,
    29, 28, 15,
    16, 115, 114,
    15, 16, 113,
    17, 16, 15,
    82, 81, 80,
    27, 16, 95,
    81, 27, 94,
    81, 83, 27,
    84, 14, 27,
    12, 13, 115,
    16, 12, 115,
    27, 12, 16,
    27, 14, 12,
    14, 13, 12,
    109, 8, 108,
    11, 10, 3,
    5, 4, 3,
    124, 3, 125,
    124, 123, 2,
    122, 0, 121,
    9, 8, 0,
    8, 7, 0,
    6, 2, 0,
    2, 1, 0
]);
