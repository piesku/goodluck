import {Mesh} from "../common/material.js";
import {GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_STATIC_DRAW} from "../common/webgl.js";

export function mesh_terrain(gl: WebGLRenderingContext): Mesh {
    let vertex_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, vertex_buf);
    gl.bufferData(GL_ARRAY_BUFFER, vertex_arr, GL_STATIC_DRAW);

    let normal_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, normal_buf);
    gl.bufferData(GL_ARRAY_BUFFER, normal_arr, GL_STATIC_DRAW);

    let texcoord_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, texcoord_buf);
    gl.bufferData(GL_ARRAY_BUFFER, texcoord_arr, GL_STATIC_DRAW);

    let index_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER, index_buf);
    gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, index_arr, GL_STATIC_DRAW);

    return {
        VertexBuffer: vertex_buf,
        VertexArray: vertex_arr,
        NormalBuffer: normal_buf,
        TexCoordBuffer: texcoord_buf,
        IndexBuffer: index_buf,
        IndexArray: index_arr,
        IndexCount: index_arr.length,
    };
}

let vertex_arr = Float32Array.from([
    50,
    0,
    -40,
    40,
    0,
    -50,
    40,
    0,
    -40,
    -40,
    0,
    -40,
    -50,
    0,
    -50,
    -50,
    0,
    -40,
    -30,
    0,
    -40,
    -40,
    0,
    -50,
    -20,
    0,
    -40,
    -30,
    0,
    -50,
    -10,
    0,
    -40,
    -20,
    0,
    -50,
    0,
    0,
    -40,
    -10,
    0,
    -50,
    10,
    0,
    -40,
    0,
    0,
    -50,
    20,
    0,
    -40,
    10,
    0,
    -50,
    30,
    0,
    -40,
    20,
    0,
    -50,
    30,
    0,
    -50,
    -40,
    0,
    50,
    -50,
    0,
    40,
    -50,
    0,
    50,
    -40,
    0,
    40,
    -50,
    0,
    30,
    -40,
    0,
    30,
    -50,
    0,
    20,
    -40,
    0,
    20,
    -50,
    0,
    10,
    -40,
    0,
    10,
    -50,
    0,
    0,
    -40,
    0,
    0,
    -50,
    0,
    -10,
    -40,
    0,
    -10,
    -50,
    0,
    -20,
    -40,
    0,
    -20,
    -50,
    0,
    -30,
    -40,
    0,
    -30,
    -30,
    0,
    50,
    -30,
    0,
    40,
    -30,
    0,
    30,
    -30,
    4.55658,
    20,
    -40,
    0,
    10,
    -40,
    0,
    20,
    -30,
    4.55658,
    10,
    -40,
    0,
    0,
    -30,
    4.55658,
    0,
    -40,
    0,
    -10,
    -30,
    0,
    -20,
    -30,
    0,
    -30,
    -20,
    0,
    50,
    -20,
    0,
    40,
    -20,
    0,
    30,
    -30,
    4.55658,
    20,
    -30,
    0,
    30,
    -20,
    4.55658,
    20,
    -30,
    4.55658,
    10,
    -30,
    4.55658,
    20,
    -20,
    4.55658,
    10,
    -30,
    4.55658,
    0,
    -20,
    4.55658,
    0,
    -30,
    4.55658,
    -10,
    -20,
    4.55658,
    -10,
    -30,
    0,
    -20,
    -30,
    4.55658,
    -10,
    -20,
    0,
    -20,
    -20,
    0,
    -30,
    -10,
    0,
    50,
    -10,
    0,
    40,
    -20,
    0,
    30,
    -10,
    0,
    30,
    -20,
    4.55658,
    20,
    -10,
    4.55658,
    20,
    -10,
    4.55658,
    10,
    -10,
    0,
    0,
    -20,
    4.55658,
    -10,
    -20,
    4.55658,
    0,
    -10,
    0,
    -10,
    -20,
    0,
    -20,
    -20,
    4.55658,
    -10,
    -10,
    0,
    -20,
    -10,
    0,
    -30,
    0,
    0,
    50,
    0,
    0,
    40,
    -10,
    0,
    30,
    0,
    0,
    30,
    -10,
    4.55658,
    20,
    0,
    4.55658,
    20,
    0,
    4.55658,
    10,
    -10,
    0,
    0,
    -10,
    4.55658,
    10,
    0,
    0,
    0,
    -10,
    0,
    -10,
    -10,
    0,
    0,
    0,
    0,
    -10,
    0,
    0,
    -20,
    0,
    0,
    -30,
    10,
    0,
    50,
    10,
    0,
    40,
    0,
    0,
    30,
    10,
    0,
    30,
    0,
    4.55658,
    20,
    10,
    4.55658,
    20,
    0,
    4.55658,
    10,
    10,
    4.55658,
    10,
    0,
    0,
    0,
    10,
    0,
    0,
    10,
    0,
    -10,
    10,
    0,
    -20,
    10,
    0,
    -30,
    20,
    0,
    50,
    20,
    0,
    40,
    10,
    0,
    30,
    20,
    0,
    30,
    10,
    4.55658,
    20,
    20,
    4.55658,
    20,
    10,
    4.55658,
    10,
    20,
    4.55658,
    10,
    10,
    0,
    0,
    20,
    0,
    0,
    20,
    0,
    -10,
    20,
    0,
    -20,
    20,
    0,
    -30,
    30,
    0,
    50,
    30,
    0,
    40,
    20,
    0,
    30,
    20,
    0,
    30,
    30,
    0,
    20,
    20,
    4.55658,
    20,
    30,
    0,
    20,
    20,
    4.55658,
    10,
    20,
    4.55658,
    20,
    30,
    0,
    10,
    20,
    0,
    0,
    20,
    4.55658,
    10,
    30,
    0,
    0,
    30,
    0,
    -10,
    30,
    0,
    -20,
    30,
    0,
    -30,
    40,
    0,
    50,
    40,
    0,
    40,
    30,
    0,
    30,
    40,
    0,
    30,
    30,
    0,
    20,
    40,
    0,
    20,
    30,
    0,
    10,
    40,
    0,
    10,
    40,
    0,
    0,
    40,
    0,
    -10,
    40,
    0,
    -20,
    40,
    0,
    -30,
    50,
    0,
    50,
    50,
    0,
    40,
    50,
    0,
    30,
    50,
    0,
    20,
    50,
    0,
    10,
    50,
    0,
    0,
    50,
    0,
    -10,
    50,
    0,
    -20,
    50,
    0,
    -30,
    50,
    0,
    -50,
    -30,
    0,
    30,
    -30,
    4.55658,
    20,
    -40,
    0,
    20,
    -30,
    4.55658,
    -10,
    -40,
    0,
    -10,
    -30,
    4.55658,
    -10,
    -30,
    0,
    -20,
    -20,
    4.55658,
    -10,
    -20,
    0,
    -20,
    -10,
    4.55658,
    10,
    -10,
    0,
    0,
    -20,
    4.55658,
    0,
    -10,
    0,
    -10,
    20,
    4.55658,
    20,
    20,
    4.55658,
    10,
    20,
    0,
    0,
    30,
    0,
    10,
]);

let normal_arr = Float32Array.from([
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    -0.4146,
    0.91,
    0,
    -0.4146,
    0.91,
    0,
    -0.4146,
    0.91,
    0,
    -0.4146,
    0.91,
    0,
    -0.4146,
    0.91,
    0,
    -0.4146,
    0.91,
    0,
    -0.4146,
    0.91,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    0.4146,
    0,
    0.91,
    0.4146,
    0,
    0.91,
    0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    -0.4146,
    0,
    0.91,
    -0.4146,
    0,
    0.91,
    -0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    0.4146,
    0,
    0.91,
    0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0.4146,
    0.91,
    0,
    0.4146,
    0.91,
    0,
    0.4146,
    0.91,
    0,
    0.383,
    0.8406,
    -0.383,
    0.383,
    0.8406,
    -0.383,
    0.383,
    0.8406,
    -0.383,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    0.4146,
    0,
    0.91,
    0.4146,
    0,
    1,
    0,
    0,
    0.91,
    -0.4146,
    0,
    0.91,
    -0.4146,
    0,
    0.91,
    -0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    0.4146,
    0,
    0.91,
    0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    -0.4146,
    0,
    0.91,
    -0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    0.4146,
    0,
    0.91,
    0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0.91,
    -0.4146,
    0,
    0.91,
    -0.4146,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0.383,
    0.8406,
    0.383,
    0.383,
    0.8406,
    0.383,
    0.383,
    0.8406,
    0.383,
    0.4146,
    0.91,
    0,
    0.4146,
    0.91,
    0,
    0.4146,
    0.91,
    0,
    0.383,
    0.8406,
    -0.383,
    0.383,
    0.8406,
    -0.383,
    0.383,
    0.8406,
    -0.383,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    -0.383,
    0.8406,
    0.383,
    -0.383,
    0.8406,
    0.383,
    -0.383,
    0.8406,
    0.383,
    -0.4146,
    0.91,
    0,
    -0.383,
    0.8406,
    -0.383,
    -0.383,
    0.8406,
    -0.383,
    -0.383,
    0.8406,
    -0.383,
    0,
    1,
    0,
    0,
    0.91,
    -0.4146,
    0.383,
    0.8406,
    -0.383,
    0.383,
    0.8406,
    -0.383,
    0.383,
    0.8406,
    -0.383,
    0.4146,
    0.91,
    0,
    0,
    0.91,
    0.4146,
    0,
    1,
    0,
    0,
    0.91,
    -0.4146,
    0.4146,
    0.91,
    0,
]);

let texcoord_arr = Float32Array.from([
    1,
    0.9,
    0.9,
    1,
    0.9,
    0.9,
    0.1,
    0.9,
    0,
    1,
    0,
    0.9,
    0.2,
    0.9,
    0.1,
    1,
    0.3,
    0.9,
    0.2,
    1,
    0.4,
    0.9,
    0.3,
    1,
    0.5,
    0.9,
    0.4,
    1,
    0.6,
    0.9,
    0.5,
    1,
    0.7,
    0.9,
    0.6,
    1,
    0.8,
    0.9,
    0.7,
    1,
    0.8,
    1,
    0.1,
    0,
    0,
    0.1,
    0,
    0,
    0.1,
    0.1,
    0,
    0.2,
    0.1,
    0.2,
    0,
    0.3,
    0.1,
    0.3,
    0,
    0.4,
    0.1,
    0.4,
    0,
    0.5,
    0.1,
    0.5,
    0,
    0.6,
    0.1,
    0.6,
    0,
    0.7,
    0.1,
    0.7,
    0,
    0.8,
    0.1,
    0.8,
    0.2,
    0,
    0.2,
    0.1,
    0.2,
    0.2,
    0.2,
    0.3,
    0.1,
    0.4,
    0.1,
    0.3,
    0.2,
    0.4,
    0.1,
    0.5,
    0.2,
    0.5,
    0.1,
    0.6,
    0.2,
    0.7,
    0.2,
    0.8,
    0.3,
    0,
    0.3,
    0.1,
    0.3,
    0.2,
    0.2,
    0.3,
    0.2,
    0.2,
    0.3,
    0.3,
    0.2,
    0.4,
    0.2,
    0.3,
    0.3,
    0.4,
    0.2,
    0.5,
    0.3,
    0.5,
    0.2,
    0.6,
    0.3,
    0.6,
    0.2,
    0.7,
    0.2,
    0.6,
    0.3,
    0.7,
    0.3,
    0.8,
    0.4,
    0,
    0.4,
    0.1,
    0.3,
    0.2,
    0.4,
    0.2,
    0.3,
    0.3,
    0.4,
    0.3,
    0.4,
    0.4,
    0.4,
    0.5,
    0.3,
    0.6,
    0.3,
    0.5,
    0.4,
    0.6,
    0.3,
    0.7,
    0.3,
    0.6,
    0.4,
    0.7,
    0.4,
    0.8,
    0.5,
    0,
    0.5,
    0.1,
    0.4,
    0.2,
    0.5,
    0.2,
    0.4,
    0.3,
    0.5,
    0.3,
    0.5,
    0.4,
    0.4,
    0.5,
    0.4,
    0.4,
    0.5,
    0.5,
    0.4,
    0.6,
    0.4,
    0.5,
    0.5,
    0.6,
    0.5,
    0.7,
    0.5,
    0.8,
    0.6,
    0,
    0.6,
    0.1,
    0.5,
    0.2,
    0.6,
    0.2,
    0.5,
    0.3,
    0.6,
    0.3,
    0.5,
    0.4,
    0.6,
    0.4,
    0.5,
    0.5,
    0.6,
    0.5,
    0.6,
    0.6,
    0.6,
    0.7,
    0.6,
    0.8,
    0.7,
    0,
    0.7,
    0.1,
    0.6,
    0.2,
    0.7,
    0.2,
    0.6,
    0.3,
    0.7,
    0.3,
    0.6,
    0.4,
    0.7,
    0.4,
    0.6,
    0.5,
    0.7,
    0.5,
    0.7,
    0.6,
    0.7,
    0.7,
    0.7,
    0.8,
    0.8,
    0,
    0.8,
    0.1,
    0.7,
    0.2,
    0.7,
    0.2,
    0.8,
    0.3,
    0.7,
    0.3,
    0.8,
    0.3,
    0.7,
    0.4,
    0.7,
    0.3,
    0.8,
    0.4,
    0.7,
    0.5,
    0.7,
    0.4,
    0.8,
    0.5,
    0.8,
    0.6,
    0.8,
    0.7,
    0.8,
    0.8,
    0.9,
    0,
    0.9,
    0.1,
    0.8,
    0.2,
    0.9,
    0.2,
    0.8,
    0.3,
    0.9,
    0.3,
    0.8,
    0.4,
    0.9,
    0.4,
    0.9,
    0.5,
    0.9,
    0.6,
    0.9,
    0.7,
    0.9,
    0.8,
    1,
    0,
    1,
    0.1,
    1,
    0.2,
    1,
    0.3,
    1,
    0.4,
    1,
    0.5,
    1,
    0.6,
    1,
    0.7,
    1,
    0.8,
    1,
    1,
    0.2,
    0.2,
    0.2,
    0.3,
    0.1,
    0.3,
    0.2,
    0.6,
    0.1,
    0.6,
    0.2,
    0.6,
    0.2,
    0.7,
    0.3,
    0.6,
    0.3,
    0.7,
    0.4,
    0.4,
    0.4,
    0.5,
    0.3,
    0.5,
    0.4,
    0.6,
    0.7,
    0.3,
    0.7,
    0.4,
    0.7,
    0.5,
    0.8,
    0.4,
]);

let index_arr = Uint16Array.from([
    173,
    172,
    171,
    168,
    167,
    166,
    164,
    163,
    162,
    135,
    134,
    133,
    131,
    178,
    130,
    132,
    131,
    130,
    129,
    128,
    127,
    119,
    177,
    118,
    106,
    119,
    105,
    105,
    119,
    118,
    90,
    106,
    89,
    89,
    106,
    105,
    91,
    90,
    89,
    80,
    79,
    78,
    76,
    174,
    75,
    77,
    76,
    75,
    64,
    170,
    63,
    65,
    64,
    63,
    62,
    169,
    61,
    60,
    62,
    61,
    117,
    176,
    116,
    103,
    117,
    116,
    104,
    117,
    103,
    88,
    104,
    103,
    74,
    104,
    88,
    73,
    74,
    88,
    59,
    74,
    73,
    60,
    61,
    59,
    59,
    61,
    74,
    57,
    60,
    59,
    57,
    59,
    56,
    56,
    59,
    73,
    58,
    57,
    56,
    115,
    175,
    114,
    102,
    115,
    101,
    101,
    115,
    114,
    87,
    102,
    86,
    86,
    102,
    101,
    72,
    87,
    71,
    71,
    87,
    86,
    54,
    72,
    53,
    53,
    72,
    71,
    55,
    54,
    53,
    48,
    165,
    47,
    46,
    48,
    47,
    46,
    47,
    45,
    43,
    46,
    45,
    43,
    45,
    42,
    44,
    43,
    42,
    149,
    158,
    157,
    148,
    149,
    157,
    148,
    157,
    156,
    23,
    22,
    21,
    22,
    24,
    21,
    21,
    24,
    39,
    22,
    25,
    24,
    5,
    4,
    3,
    4,
    7,
    3,
    94,
    93,
    92,
    93,
    95,
    92,
    92,
    95,
    107,
    93,
    81,
    95,
    81,
    96,
    95,
    17,
    19,
    16,
    15,
    17,
    14,
    14,
    17,
    16,
    12,
    14,
    110,
    13,
    15,
    12,
    12,
    15,
    14,
    97,
    12,
    110,
    10,
    12,
    97,
    11,
    13,
    10,
    10,
    13,
    12,
    82,
    97,
    96,
    82,
    10,
    97,
    81,
    82,
    96,
    8,
    10,
    82,
    9,
    11,
    8,
    8,
    11,
    10,
    7,
    9,
    6,
    6,
    9,
    8,
    3,
    7,
    6,
    67,
    82,
    81,
    6,
    8,
    67,
    67,
    8,
    82,
    66,
    81,
    93,
    66,
    67,
    81,
    50,
    67,
    66,
    3,
    6,
    50,
    50,
    6,
    67,
    5,
    3,
    38,
    38,
    3,
    50,
    37,
    5,
    38,
    38,
    50,
    49,
    49,
    50,
    66,
    37,
    38,
    36,
    36,
    38,
    49,
    35,
    37,
    36,
    35,
    36,
    34,
    36,
    49,
    34,
    33,
    35,
    34,
    33,
    34,
    32,
    31,
    33,
    32,
    31,
    32,
    30,
    29,
    31,
    30,
    29,
    30,
    28,
    27,
    29,
    28,
    27,
    28,
    26,
    25,
    26,
    24,
    25,
    27,
    26,
    24,
    40,
    39,
    39,
    40,
    51,
    24,
    26,
    40,
    26,
    41,
    40,
    26,
    28,
    41,
    40,
    52,
    51,
    51,
    52,
    68,
    40,
    41,
    52,
    41,
    70,
    52,
    52,
    69,
    68,
    68,
    69,
    83,
    52,
    70,
    69,
    70,
    85,
    69,
    69,
    84,
    83,
    83,
    84,
    98,
    69,
    85,
    84,
    85,
    100,
    84,
    84,
    99,
    98,
    98,
    99,
    111,
    84,
    100,
    99,
    100,
    113,
    99,
    99,
    112,
    111,
    111,
    112,
    124,
    99,
    113,
    112,
    141,
    153,
    152,
    140,
    141,
    152,
    125,
    141,
    140,
    112,
    125,
    124,
    124,
    125,
    140,
    113,
    126,
    112,
    112,
    126,
    125,
    126,
    142,
    125,
    125,
    142,
    141,
    143,
    154,
    153,
    142,
    143,
    141,
    141,
    143,
    153,
    144,
    142,
    126,
    142,
    144,
    143,
    145,
    155,
    154,
    144,
    145,
    143,
    143,
    145,
    154,
    147,
    156,
    155,
    147,
    148,
    156,
    145,
    147,
    155,
    146,
    147,
    145,
    144,
    146,
    145,
    136,
    148,
    147,
    146,
    136,
    147,
    120,
    136,
    146,
    95,
    108,
    107,
    107,
    108,
    120,
    95,
    96,
    108,
    97,
    110,
    109,
    96,
    109,
    108,
    96,
    97,
    109,
    108,
    121,
    120,
    120,
    121,
    136,
    108,
    109,
    121,
    137,
    149,
    148,
    121,
    137,
    136,
    136,
    137,
    148,
    109,
    122,
    121,
    121,
    122,
    137,
    109,
    110,
    122,
    14,
    16,
    123,
    110,
    123,
    122,
    110,
    14,
    123,
    122,
    138,
    137,
    137,
    138,
    149,
    122,
    123,
    138,
    150,
    159,
    158,
    138,
    150,
    149,
    149,
    150,
    158,
    123,
    139,
    138,
    138,
    139,
    150,
    123,
    16,
    139,
    16,
    18,
    139,
    19,
    20,
    18,
    16,
    19,
    18,
    139,
    151,
    150,
    150,
    151,
    159,
    139,
    18,
    151,
    151,
    160,
    159,
    18,
    2,
    151,
    151,
    2,
    160,
    18,
    20,
    2,
    20,
    1,
    2,
    2,
    0,
    160,
    1,
    161,
    0,
    2,
    1,
    0,
]);
